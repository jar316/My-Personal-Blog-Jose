{
  "hash": "1b5a61dc3e60184f761f7c5ef898e17b",
  "result": {
    "markdown": "---\ntitle: \"Linear Regression vs Generalized Additive Models\"\nformat: html\nauthor: \"Jose A Rodriguez\"\neditor: visual\ndate: \"2023-12-07\"\nimage: \"image.jpg\"\ncategories: [Code, Analysis]\n---\n\n::: {.cell}\n\n:::\n\n\n## Business Problem\n\nOur focus will be on examining the connection between the behaviors and routines of pregnant mothers and the outcomes of their childbirth. Please note, the dataset we'll be using is a randomly selected subset of the original dataset.\n\n**Attributes:**\n\n-   **Predictors**\n\n    -   **fage**: father's age in years.\n\n    -   **mage**: mother's age in years.\n\n    -   **mature**: maturity status of mother.\n\n    -   **weeks**: length of pregnancy in weeks.\n\n    -   **premie**: whether the birth was classified as premature (premie) or full-term.\n\n    -   **visits**: number of hospital visits during pregnancy.\n\n    -   **marital**: whether mother is married or not married at birth.\n\n    -   **gained**: weight gained by mother during pregnancy in pounds.\n\n    -   **gender**: gender of the baby, female or male.\n\n    -   **habit**: status of the mother as a nonsmoker or a smoker.\n\n    -   **whitemom**: whether mother is white or not white.\n\n**Outcome Variable:**\n\n-   **weight**: weight of the baby at birth in pounds. (Regression problem)\n\n#### \n\n\n::: {.cell}\n\n:::\n\n\n## \n\n::: {.callout-important appearance=\"simple\"}\n## \n\nThe correlation between 'weight' and all other variable varied and the strongest variable was 'weeks'. When the 'weeks' of pregnancy are longer, the baby's birth weight tends to be higher relationship is pretty strong ( 0.67). Also, it looks like the weight gained during pregnancy and how often someone goes to the doctor 'visits' might also have a small effect on the baby's birth weight.\n:::\n\n## \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Please provide your code for Task 1 in this code chunk\n\n#Data Structure Check\nstr(mydata)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t999 obs. of  12 variables:\n $ fage    : int  NA NA 19 21 NA NA 18 17 NA 20 ...\n $ mage    : int  13 14 15 15 15 15 15 15 16 16 ...\n $ mature  : chr  \"younger mom\" \"younger mom\" \"younger mom\" \"younger mom\" ...\n $ weeks   : int  39 42 37 41 39 38 37 35 38 37 ...\n $ premie  : chr  \"full term\" \"full term\" \"full term\" \"full term\" ...\n $ visits  : int  10 15 11 6 9 19 12 5 9 13 ...\n $ marital : chr  \"married\" \"married\" \"married\" \"married\" ...\n $ gained  : int  38 20 38 34 27 22 76 15 NA 52 ...\n $ weight  : num  7.63 7.88 6.63 8 6.38 5.38 8.44 4.69 8.81 6.94 ...\n $ gender  : chr  \"male\" \"male\" \"female\" \"male\" ...\n $ habit   : chr  \"nonsmoker\" \"nonsmoker\" \"nonsmoker\" \"nonsmoker\" ...\n $ whitemom: chr  \"not white\" \"not white\" \"white\" \"white\" ...\n```\n:::\n\n```{.r .cell-code}\nnumeric <- sapply(mydata, is.numeric)\ncategorical <- sapply(mydata, is.factor)\n\nmydata[, numeric] <- lapply(mydata[, numeric], function(x) ifelse(is.na(x), median(x, na.rm = TRUE), x))\n\nMode <- function(x) {\n  ux <- unique(x)\n  ux[which.max(tabulate(match(x, ux)))]\n}\n\n# Replace missing values in categorical columns with mode\nmydata[, categorical] <- lapply(mydata[, categorical], function(x) ifelse(is.na(x), Mode(x), x))\n\n\nnumeric_vars <- sapply(mydata, is.numeric)\n\ncor_matrix_numeric <- cor(mydata[, numeric_vars])\n\ntarget_var <- \"weight\"  \ncor_with_target <- cor_matrix_numeric['weight', ]\nhighest_correlation <- names(sort(abs(cor_with_target), decreasing = TRUE)[2])\n\nplot(mydata[[target_var]], mydata[[highest_correlation]],\n     xlab = target_var, ylab = highest_correlation,\n     main = paste(\"Scatter plot between\", target_var, \"and\", highest_correlation))\n```\n\n::: {.cell-output-display}\n![](Rodriguez_Jose_Week_5_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n## \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Please provide your code for Task 2 in this code chunk\n# split the sample by using rsample package\n\n# Split the data into a training set (70%) and a test set (30%)\nset.seed(123456)\n\n# Divide the dataset into a training set (70%) and a test set (30%) using stratified sampling\nsplit_data <- initial_split(mydata, prop = 0.7, strata = \"weight\")\n\n# Assign the training set and test set to variables\ntrain_data <- training(split_data)\ntest_data <- testing(split_data)\n```\n:::\n\n\n## \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Please provide your code for Task 3  in this code chunk\n\nlinearmodel <- lm(weight ~ ., data = train_data)\n\npredicted_weights_ols <- predict(linearmodel, newdata = test_data)\n\n\nMSPE_linear <- mean((predicted_weights_ols - as.numeric(test_data$weight))^2, na.rm = TRUE)\n\nprint(MSPE_linear)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.134988\n```\n:::\n:::\n\n\n## \n\n::: {.callout-important appearance=\"simple\"}\n```         \n1.107573\n```\n:::\n\n## \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Please provide your code for Task 4 in this code chunk\n\n# Fit a Generalized Additive Model (GAM) on train_data using gam()\n# Assuming suitable predictors are 'predictor1', 'predictor2', etc. Update these names based on your dataset.\ngam_model <- gam(weight ~ s(weeks) + s(visits)  + habit + gender, data = train_data, method = \"REML\")\n\n# Print smoothing parameters from gam_model\nsummary(gam_model)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nFamily: gaussian \nLink function: identity \n\nFormula:\nweight ~ s(weeks) + s(visits) + habit + gender\n\nParametric coefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  6.94080    0.05690 121.979  < 2e-16 ***\nhabitsmoker -0.31862    0.11788  -2.703  0.00704 ** \ngendermale   0.35506    0.07862   4.516 7.41e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nApproximate significance of smooth terms:\n            edf Ref.df       F p-value    \ns(weeks)  4.941  5.991 113.180 < 2e-16 ***\ns(visits) 4.466  5.482   3.373 0.00406 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nR-sq.(adj) =  0.539   Deviance explained = 54.7%\n-REML = 1024.4  Scale est. = 1.0527    n = 698\n```\n:::\n\n```{.r .cell-code}\n# Predict weight variable in the test_data dataset using gam_model\npredicted_weights_gam <- predict(gam_model, newdata = test_data)\n\n# Calculate mean squared prediction error (MSPE) by comparing predicted values with actual values\nMSPE_gam <- mean((predicted_weights_gam - test_data$weight)^2)\n\n# Print the value of MSPE_gam to the console\nprint(MSPE_gam)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.107573\n```\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n## \n\n::: {.callout-important appearance=\"simple\"}\nUsing the **`gam_model provided the lowest MSPE of 1.108`**\n:::\n\n## \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Please provide your code for Task 5 in this code chunk\n\nprint(MSPE_linear)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.134988\n```\n:::\n\n```{.r .cell-code}\nprint(MSPE_gam)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.107573\n```\n:::\n:::\n",
    "supporting": [
      "Rodriguez_Jose_Week_5_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}